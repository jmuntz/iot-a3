<?php require_once '../config.php'; ?>
<!DOCTYPE html>
<html lang="en" dir="ltr">
	<head>
		<meta charset="utf-8">
		<title></title>
	</head>
	<link rel="stylesheet" href="../assets/stylesheet.css">
	<body>
		<?php session_start(); ?>
		
		
		<?php if (!isset($_SESSION["logged_in"]) || (!$_SESSION["logged_in"])) : ?>
		<form class="frm-login" action=<?php echo "$root_URL/api/login"; ?> method="post">
			<h1>Log in</h1>
			<input type="text" name="username" value="admin">
			<input type="text" name="password" value="password">
			<button type="submit" name="button"> Login</button>
		</form>
		<?php else : ?>
		<ul class="nav menu">
			<li><a class="btn" href=<?php echo '"'.$root_URL .'"'; ?>>Home</a></li>
			<li><a class="btn logout" href="logout.php">Logout</a></li>
		</ul>
		<ul class="nav chart">
			<li><strong>Charts</strong></li>
			<li><a href=<?php echo '"'.$root_URL .'/charts/latest.php"'; ?>>Latest</a></li>
			<li><a href=<?php echo '"'.$root_URL .'/charts/mean.php"'; ?>>Mean</a></li>
			<li><a href=<?php echo '"'.$root_URL .'/charts/median.php"'; ?>>Median</a></li>
		</ul>
		<ul class="nav todo">
			<li><strong>todo's</strong>
			<li>Build out median chart</li>
			<li style="text-decoration: line-through;">Build out mean chart</li>
			<li style="text-decoration: line-through;">Add humidity to <em>latest</em> chart chart</li>
			<li>Add feature to allow actuator to act based on temperature</li>
			<li style="text-decoration: line-through;"> - needs to be editable via website</li>
			<li> Report</li>
		</ul>
		<h3>You're logged in!</h3>
		
		
		<div class="charts">
			<div class="chart">
				<h2> Mean data</h2>
				<p> Calculates the mean of each device for the last 10 datapoints.</p>
				<canvas id="chart" style="max-width: 800px; max-height: 600px;"></canvas>
			</div>
			
		</div>

		<script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.js"></script>
		<script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
		<script>
		x_axis = [41, 41, 41, 41, 34, 32, 30, 27, 24, 20, 18, 16, 15, 15, 15, 15, 15, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13];


			y_axis = [30, 34, 41, 55, 55, 63, 60, 75, 94, 93, 92, 92, 76, 74, 74, 74, 74, 77, 77, 75, 75, 75, 75, 75, 74, 75, 74, 74, 74, 74, 75, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 74, 75, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 75, 75, 75, 75, 75, 75, 75, 75, 75, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 74, 74, 74, 74, 75, 75, 74, 74, 74, 74, 74, 74, 74, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 73, 73, 73, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 75, 74, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 74, 74, 74, 74, 74, 74, 75, 74, 74, 74, 75, 74, 75, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 75, 74, 74, 74, 74, 75, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 73, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 73, 73, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74];



			x_axis_prediction = [41, 41, 41, 41, 34, 32, 30, 27, 24, 20, 18, 16, 15, 15, 15, 15, 15, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13];

			y_axis_prediction = [30, 34, 41, 55, 55, 63, 60, 75, 94, 93, 92, 92, 76, 74, 74, 74, 74, 77, 77, 75, 75, 75, 75, 75, 74, 75, 74, 74, 74, 74, 75, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 74, 75, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 75, 75, 75, 75, 75, 75, 75, 75, 75, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 74, 74, 74, 74, 75, 75, 74, 74, 74, 74, 74, 74, 74, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 73, 73, 73, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 75, 74, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 74, 74, 74, 74, 74, 74, 75, 74, 74, 74, 75, 74, 75, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 75, 74, 74, 74, 74, 75, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 73, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 73, 73, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74]

		x_axis_prediction_luke = [5, 5.05, 5.1 , 5.15, 5.2 , 5.25, 5.3 , 5.35, 5.4 , 5.45, 5.5 , 5.55, 5.6 , 5.65, 5.7 , 5.75, 5.8 , 5.85, 5.9 , 5.95, 6, 6.05, 6.1 , 6.15, 6.2 , 6.25, 6.3 , 6.35, 6.4 , 6.45, 6.5 , 6.55, 6.6 , 6.65, 6.7 , 6.75, 6.8 , 6.85, 6.9 , 6.95, 7, 7.05, 7.1 , 7.15, 7.2 , 7.25, 7.3 , 7.35, 7.4 , 7.45, 7.5 , 7.55, 7.6 , 7.65, 7.7 , 7.75, 7.8 , 7.85, 7.9 , 7.95, 8, 8.05, 8.1 , 8.15, 8.2 , 8.25, 8.3 , 8.35, 8.4 , 8.45, 8.5 , 8.55, 8.6 , 8.65, 8.7 , 8.75, 8.8 , 8.85, 8.9 , 8.95, 9, 9.05, 9.1 , 9.15, 9.2 , 9.25, 9.3 , 9.35, 9.4 , 9.45, 9.5 , 9.55, 9.6 , 9.65, 9.7 , 9.75, 9.8 , 9.85, 9.9 , 9.95, 10, 10.05, 10.1 , 10.15, 10.2 , 10.25, 10.3 , 10.35, 10.4 , 10.45, 10.5 , 10.55, 10.6 , 10.65, 10.7 , 10.75, 10.8 , 10.85, 10.9 , 10.95, 11, 11.05, 11.1 , 11.15, 11.2 , 11.25, 11.3 , 11.35, 11.4 , 11.45, 11.5 , 11.55, 11.6 , 11.65, 11.7 , 11.75, 11.8 , 11.85, 11.9 , 11.95, 12, 12.05, 12.1 , 12.15, 12.2 , 12.25, 12.3 , 12.35, 12.4 , 12.45, 12.5 , 12.55, 12.6 , 12.65, 12.7 , 12.75, 12.8 , 12.85, 12.9 , 12.95, 13, 13.05, 13.1 , 13.15, 13.2 , 13.25, 13.3 , 13.35, 13.4 , 13.45, 13.5 , 13.55, 13.6 , 13.65, 13.7 , 13.75, 13.8 , 13.85, 13.9 , 13.95, 14, 14.05, 14.1 , 14.15, 14.2 , 14.25, 14.3 , 14.35, 14.4 , 14.45, 14.5 , 14.55, 14.6 , 14.65, 14.7 , 14.75, 14.8 , 14.85, 14.9 , 14.95, 15, 15.05, 15.1 , 15.15, 15.2 , 15.25, 15.3 , 15.35, 15.4 , 15.45, 15.5 , 15.55, 15.6 , 15.65, 15.7 , 15.75, 15.8 , 15.85, 15.9 , 15.95, 16, 16.05, 16.1 , 16.15, 16.2 , 16.25, 16.3 , 16.35, 16.4 , 16.45, 16.5 , 16.55, 16.6 , 16.65, 16.7 , 16.75, 16.8 , 16.85, 16.9 , 16.95, 17, 17.05, 17.1 , 17.15, 17.2 , 17.25, 17.3 , 17.35, 17.4 , 17.45, 17.5 , 17.55, 17.6 , 17.65, 17.7 , 17.75, 17.8 , 17.85, 17.9 , 17.95, 18, 18.05, 18.1 , 18.15, 18.2 , 18.25, 18.3 , 18.35, 18.4 , 18.45, 18.5 , 18.55, 18.6 , 18.65, 18.7 , 18.75, 18.8 , 18.85, 18.9 , 18.95, 19, 19.05, 19.1 , 19.15, 19.2 , 19.25, 19.3 , 19.35, 19.4 , 19.45, 19.5 , 19.55, 19.6 , 19.65, 19.7 , 19.75, 19.8 , 19.85, 19.9 , 19.95, 20, 20.05, 20.1 , 20.15, 20.2 , 20.25, 20.3 , 20.35, 20.4 , 20.45, 20.5 , 20.55, 20.6 , 20.65, 20.7 , 20.75, 20.8 , 20.85, 20.9 , 20.95, 21, 21.05, 21.1 , 21.15, 21.2 , 21.25, 21.3 , 21.35, 21.4 , 21.45, 21.5 , 21.55, 21.6 , 21.65, 21.7 , 21.75, 21.8 , 21.85, 21.9 , 21.95, 22, 22.05, 22.1 , 22.15, 22.2 , 22.25, 22.3 , 22.35, 22.4 , 22.45, 22.5 , 22.55, 22.6 , 22.65, 22.7 , 22.75, 22.8 , 22.85, 22.9 , 22.95, 23, 23.05, 23.1 , 23.15, 23.2 , 23.25, 23.3 , 23.35, 23.4 , 23.45, 23.5 , 23.55, 23.6 , 23.65, 23.7 , 23.75, 23.8 , 23.85, 23.9 , 23.95, 24, 24.05, 24.1 , 24.15, 24.2 , 24.25, 24.3 , 24.35, 24.4 , 24.45, 24.5 , 24.55, 24.6 , 24.65, 24.7 , 24.75, 24.8 , 24.85, 24.9 , 24.95, 25, 25.05, 25.1 , 25.15, 25.2 , 25.25, 25.3 , 25.35, 25.4 , 25.45, 25.5 , 25.55, 25.6 , 25.65, 25.7 , 25.75, 25.8 , 25.85, 25.9 , 25.95, 26, 26.05, 26.1 , 26.15, 26.2 , 26.25, 26.3 , 26.35, 26.4 , 26.45, 26.5 , 26.55, 26.6 , 26.65, 26.7 , 26.75, 26.8 , 26.85, 26.9 , 26.95, 27, 27.05, 27.1 , 27.15, 27.2 , 27.25, 27.3 , 27.35, 27.4 , 27.45, 27.5 , 27.55, 27.6 , 27.65, 27.7 , 27.75, 27.8 , 27.85, 27.9 , 27.95, 28, 28.05, 28.1 , 28.15, 28.2 , 28.25, 28.3 , 28.35, 28.4 , 28.45, 28.5 , 28.55, 28.6 , 28.65, 28.7 , 28.75, 28.8 , 28.85, 28.9 , 28.95, 29, 29.05, 29.1 , 29.15, 29.2 , 29.25, 29.3 , 29.35, 29.4 , 29.45, 29.5 , 29.55, 29.6 , 29.65, 29.7 , 29.75, 29.8 , 29.85, 29.9 , 29.95, 30, 30.05, 30.1 , 30.15, 30.2 , 30.25, 30.3 , 30.35, 30.4 , 30.45, 30.5 , 30.55, 30.6 , 30.65, 30.7 , 30.75, 30.8 , 30.85, 30.9 , 30.95, 31, 31.05, 31.1 , 31.15, 31.2 , 31.25, 31.3 , 31.35, 31.4 , 31.45, 31.5 , 31.55, 31.6 , 31.65, 31.7 , 31.75, 31.8 , 31.85, 31.9 , 31.95, 32, 32.05, 32.1 , 32.15, 32.2 , 32.25, 32.3 , 32.35, 32.4 , 32.45, 32.5 , 32.55, 32.6 , 32.65, 32.7 , 32.75, 32.8 , 32.85, 32.9 , 32.95, 33, 33.05, 33.1 , 33.15, 33.2 , 33.25, 33.3 , 33.35, 33.4 , 33.45, 33.5 , 33.55, 33.6 , 33.65, 33.7 , 33.75, 33.8 , 33.85, 33.9 , 33.95, 34, 34.05, 34.1 , 34.15, 34.2 , 34.25, 34.3 , 34.35, 34.4 , 34.45, 34.5 , 34.55, 34.6 , 34.65, 34.7 , 34.75, 34.8 , 34.85, 34.9 , 34.95, 35, 35.05, 35.1 , 35.15, 35.2 , 35.25, 35.3 , 35.35, 35.4 , 35.45, 35.5 , 35.55, 35.6 , 35.65, 35.7 , 35.75, 35.8 , 35.85, 35.9 , 35.95, 36, 36.05, 36.1 , 36.15, 36.2 , 36.25, 36.3 , 36.35, 36.4 , 36.45, 36.5 , 36.55, 36.6 , 36.65, 36.7 , 36.75, 36.8 , 36.85, 36.9 , 36.95, 37, 37.05, 37.1 , 37.15, 37.2 , 37.25, 37.3 , 37.35, 37.4 , 37.45, 37.5 , 37.55, 37.6 , 37.65, 37.7 , 37.75, 37.8 , 37.85, 37.9 , 37.95, 38, 38.05, 38.1 , 38.15, 38.2 , 38.25, 38.3 , 38.35, 38.4 , 38.45, 38.5 , 38.55, 38.6 , 38.65, 38.7 , 38.75, 38.8 , 38.85, 38.9 , 38.95, 39, 39.05, 39.1 , 39.15, 39.2 , 39.25, 39.3 , 39.35, 39.4 , 39.45, 39.5 , 39.55, 39.6 , 39.65, 39.7 , 39.75, 39.8 , 39.85, 39.9 , 39.95, 40, 40.05, 40.1 , 40.15, 40.2 , 40.25, 40.3 , 40.35, 40.4 , 40.45, 40.5 , 40.55, 40.6 , 40.65, 40.7 , 40.75, 40.8 , 40.85, 40.9 , 40.95, 41, 41.05, 41.1 , 41.15, 41.2 , 41.25, 41.3 , 41.35, 41.4 , 41.45, 41.5 , 41.55, 41.6 , 41.65, 41.7 , 41.75, 41.8 , 41.85, 41.9 , 41.95, 42, 42.05, 42.1 , 42.15, 42.2 , 42.25, 42.3 , 42.35, 42.4 , 42.45, 42.5 , 42.55, 42.6 , 42.65, 42.7 , 42.75, 42.8 , 42.85, 42.9 , 42.95, 43, 43.05, 43.1 , 43.15, 43.2 , 43.25, 43.3 , 43.35, 43.4 , 43.45, 43.5 , 43.55, 43.6 , 43.65, 43.7 , 43.75, 43.8 , 43.85, 43.9 , 43.95, 44, 44.05, 44.1 , 44.15, 44.2 , 44.25, 44.3 , 44.35, 44.4 , 44.45, 44.5 , 44.55, 44.6 , 44.65, 44.7 , 44.75, 44.8 , 44.85, 44.9 , 44.95];


			y_axis_prediction_luke = [72.6234445, 72.53424842, 72.44505233, 72.35585625, 72.26666017, 72.17746408, 72.088268, 71.99907192, 71.90987583, 71.82067975, 71.73148366, 71.64228758, 71.5530915, 71.46389541, 71.37469933, 71.28550325, 71.19630716, 71.10711108, 71.017915, 70.92871891, 70.83952283, 70.75032675, 70.66113066, 70.57193458, 70.48273849, 70.39354241, 70.30434633, 70.21515024, 70.12595416, 70.03675808, 69.94756199, 69.85836591, 69.76916983, 69.67997374, 69.59077766, 69.50158158, 69.41238549, 69.32318941, 69.23399332, 69.14479724, 69.05560116, 68.96640507, 68.87720899, 68.78801291, 68.69881682, 68.60962074, 68.52042466, 68.43122857, 68.34203249, 68.25283641, 68.16364032, 68.07444424, 67.98524815, 67.89605207, 67.80685599, 67.7176599, 67.62846382, 67.53926774, 67.45007165, 67.36087557, 67.27167949, 67.1824834, 67.09328732, 67.00409123, 66.91489515, 66.82569907, 66.73650298, 66.6473069, 66.55811082, 66.46891473, 66.37971865, 66.29052257, 66.20132648, 66.1121304, 66.02293432, 65.93373823, 65.84454215, 65.75534606, 65.66614998, 65.5769539, 65.48775781, 65.39856173, 65.30936565, 65.22016956, 65.13097348, 65.0417774, 64.95258131, 64.86338523, 64.77418915, 64.68499306, 64.59579698, 64.50660089, 64.41740481, 64.32820873, 64.23901264, 64.14981656, 64.06062048, 63.97142439, 63.88222831, 63.79303223, 63.70383614, 63.61464006, 63.52544397, 63.43624789, 63.34705181, 63.25785572, 63.16865964, 63.07946356, 62.99026747, 62.90107139, 62.81187531, 62.72267922, 62.63348314, 62.54428706, 62.45509097, 62.36589489, 62.2766988, 62.18750272, 62.09830664, 62.00911055, 61.91991447, 61.83071839, 61.7415223, 61.65232622, 61.56313014, 61.47393405, 61.38473797, 61.29554189, 61.2063458, 61.11714972, 61.02795363, 60.93875755, 60.84956147, 60.76036538, 60.6711693, 60.58197322, 60.49277713, 60.40358105, 60.31438497, 60.22518888, 60.1359928, 60.04679671, 59.95760063, 59.86840455, 59.77920846, 59.69001238, 59.6008163, 59.51162021, 59.42242413, 59.33322805, 59.24403196, 59.15483588, 59.0656398, 58.97644371, 58.88724763, 58.79805154, 58.70885546, 58.61965938, 58.53046329, 58.44126721, 58.35207113, 58.26287504, 58.17367896, 58.08448288, 57.99528679, 57.90609071, 57.81689463, 57.72769854, 57.63850246, 57.54930637, 57.46011029, 57.37091421, 57.28171812, 57.19252204, 57.10332596, 57.01412987, 56.92493379, 56.83573771, 56.74654162, 56.65734554, 56.56814945, 56.47895337, 56.38975729, 56.3005612, 56.21136512, 56.12216904, 56.03297295, 55.94377687, 55.85458079, 55.7653847, 55.67618862, 55.58699254, 55.49779645, 55.40860037, 55.31940428, 55.2302082, 55.14101212, 55.05181603, 54.96261995, 54.87342387, 54.78422778, 54.6950317, 54.60583562, 54.51663953, 54.42744345, 54.33824737, 54.24905128, 54.1598552, 54.07065911, 53.98146303, 53.89226695, 53.80307086, 53.71387478, 53.6246787, 53.53548261, 53.44628653, 53.35709045, 53.26789436, 53.17869828, 53.08950219, 53.00030611, 52.91111003, 52.82191394, 52.73271786, 52.64352178, 52.55432569, 52.46512961, 52.37593353, 52.28673744, 52.19754136, 52.10834528, 52.01914919, 51.92995311, 51.84075702, 51.75156094, 51.66236486, 51.57316877, 51.48397269, 51.39477661, 51.30558052, 51.21638444, 51.12718836, 51.03799227, 50.94879619, 50.85960011, 50.77040402, 50.68120794, 50.59201185, 50.50281577, 50.41361969, 50.3244236, 50.23522752, 50.14603144, 50.05683535, 49.96763927, 49.87844319, 49.7892471, 49.70005102, 49.61085493, 49.52165885, 49.43246277, 49.34326668, 49.2540706, 49.16487452, 49.07567843, 48.98648235, 48.89728627, 48.80809018, 48.7188941, 48.62969802, 48.54050193, 48.45130585, 48.36210976, 48.27291368, 48.1837176, 48.09452151, 48.00532543, 47.91612935, 47.82693326, 47.73773718, 47.6485411, 47.55934501, 47.47014893, 47.38095285, 47.29175676, 47.20256068, 47.11336459, 47.02416851, 46.93497243, 46.84577634, 46.75658026, 46.66738418, 46.57818809, 46.48899201, 46.39979593, 46.31059984, 46.22140376, 46.13220768, 46.04301159, 45.95381551, 45.86461942, 45.77542334, 45.68622726, 45.59703117, 45.50783509, 45.41863901, 45.32944292, 45.24024684, 45.15105076, 45.06185467, 44.97265859, 44.8834625, 44.79426642, 44.70507034, 44.61587425, 44.52667817, 44.43748209, 44.348286, 44.25908992, 44.16989384, 44.08069775, 43.99150167, 43.90230559, 43.8131095, 43.72391342, 43.63471733, 43.54552125, 43.45632517, 43.36712908, 43.277933, 43.18873692, 43.09954083, 43.01034475, 42.92114867, 42.83195258, 42.7427565, 42.65356042, 42.56436433, 42.47516825, 42.38597216, 42.29677608, 42.20758, 42.11838391, 42.02918783, 41.93999175, 41.85079566, 41.76159958, 41.6724035, 41.58320741, 41.49401133, 41.40481524, 41.31561916, 41.22642308, 41.13722699, 41.04803091, 40.95883483, 40.86963874, 40.78044266, 40.69124658, 40.60205049, 40.51285441, 40.42365833, 40.33446224, 40.24526616, 40.15607007, 40.06687399, 39.97767791, 39.88848182, 39.79928574, 39.71008966, 39.62089357, 39.53169749, 39.44250141, 39.35330532, 39.26410924, 39.17491316, 39.08571707, 38.99652099, 38.9073249, 38.81812882, 38.72893274, 38.63973665, 38.55054057, 38.46134449, 38.3721484, 38.28295232, 38.19375624, 38.10456015, 38.01536407, 37.92616798, 37.8369719, 37.74777582, 37.65857973, 37.56938365, 37.48018757, 37.39099148, 37.3017954, 37.21259932, 37.12340323, 37.03420715, 36.94501107, 36.85581498, 36.7666189, 36.67742281, 36.58822673, 36.49903065, 36.40983456, 36.32063848, 36.2314424, 36.14224631, 36.05305023, 35.96385415, 35.87465806, 35.78546198, 35.6962659, 35.60706981, 35.51787373, 35.42867764, 35.33948156, 35.25028548, 35.16108939, 35.07189331, 34.98269723, 34.89350114, 34.80430506, 34.71510898, 34.62591289, 34.53671681, 34.44752072, 34.35832464, 34.26912856, 34.17993247, 34.09073639, 34.00154031, 33.91234422, 33.82314814, 33.73395206, 33.64475597, 33.55555989, 33.46636381, 33.37716772, 33.28797164, 33.19877555, 33.10957947, 33.02038339, 32.9311873, 32.84199122, 32.75279514, 32.66359905, 32.57440297, 32.48520689, 32.3960108, 32.30681472, 32.21761864, 32.12842255, 32.03922647, 31.95003038, 31.8608343, 31.77163822, 31.68244213, 31.59324605, 31.50404997, 31.41485388, 31.3256578, 31.23646172, 31.14726563, 31.05806955, 30.96887346, 30.87967738, 30.7904813, 30.70128521, 30.61208913, 30.52289305, 30.43369696, 30.34450088, 30.2553048, 30.16610871, 30.07691263, 29.98771655, 29.89852046, 29.80932438, 29.72012829, 29.63093221, 29.54173613, 29.45254004, 29.36334396, 29.27414788, 29.18495179, 29.09575571, 29.00655963, 28.91736354, 28.82816746, 28.73897138, 28.64977529, 28.56057921, 28.47138312, 28.38218704, 28.29299096, 28.20379487, 28.11459879, 28.02540271, 27.93620662, 27.84701054, 27.75781446, 27.66861837, 27.57942229, 27.4902262, 27.40103012, 27.31183404, 27.22263795, 27.13344187, 27.04424579, 26.9550497, 26.86585362, 26.77665754, 26.68746145, 26.59826537, 26.50906929, 26.4198732, 26.33067712, 26.24148103, 26.15228495, 26.06308887, 25.97389278, 25.8846967, 25.79550062, 25.70630453, 25.61710845, 25.52791237, 25.43871628, 25.3495202, 25.26032412, 25.17112803, 25.08193195, 24.99273586, 24.90353978, 24.8143437, 24.72514761, 24.63595153, 24.54675545, 24.45755936, 24.36836328, 24.2791672, 24.18997111, 24.10077503, 24.01157894, 23.92238286, 23.83318678, 23.74399069, 23.65479461, 23.56559853, 23.47640244, 23.38720636, 23.29801028, 23.20881419, 23.11961811, 23.03042203, 22.94122594, 22.85202986, 22.76283377, 22.67363769, 22.58444161, 22.49524552, 22.40604944, 22.31685336, 22.22765727, 22.13846119, 22.04926511, 21.96006902, 21.87087294, 21.78167686, 21.69248077, 21.60328469, 21.5140886, 21.42489252, 21.33569644, 21.24650035, 21.15730427, 21.06810819, 20.9789121, 20.88971602, 20.80051994, 20.71132385, 20.62212777, 20.53293169, 20.4437356, 20.35453952, 20.26534343, 20.17614735, 20.08695127, 19.99775518, 19.9085591, 19.81936302, 19.73016693, 19.64097085, 19.55177477, 19.46257868, 19.3733826, 19.28418651, 19.19499043, 19.10579435, 19.01659826, 18.92740218, 18.8382061, 18.74901001, 18.65981393, 18.57061785, 18.48142176, 18.39222568, 18.3030296, 18.21383351, 18.12463743, 18.03544134, 17.94624526, 17.85704918, 17.76785309, 17.67865701, 17.58946093, 17.50026484, 17.41106876, 17.32187268, 17.23267659, 17.14348051, 17.05428443, 16.96508834, 16.87589226, 16.78669617, 16.69750009, 16.60830401, 16.51910792, 16.42991184, 16.34071576, 16.25151967, 16.16232359, 16.07312751, 15.98393142, 15.89473534, 15.80553925, 15.71634317, 15.62714709, 15.537951, 15.44875492, 15.35955884, 15.27036275, 15.18116667, 15.09197059, 15.0027745, 14.91357842, 14.82438234, 14.73518625, 14.64599017, 14.55679408, 14.467598, 14.37840192, 14.28920583, 14.20000975, 14.11081367, 14.02161758, 13.9324215, 13.84322542, 13.75402933, 13.66483325, 13.57563717, 13.48644108, 13.397245, 13.30804891, 13.21885283, 13.12965675, 13.04046066, 12.95126458, 12.8620685, 12.77287241, 12.68367633, 12.59448025, 12.50528416, 12.41608808, 12.32689199, 12.23769591, 12.14849983, 12.05930374, 11.97010766, 11.88091158, 11.79171549, 11.70251941, 11.61332333, 11.52412724, 11.43493116, 11.34573508, 11.25653899, 11.16734291, 11.07814682, 10.98895074, 10.89975466, 10.81055857, 10.72136249, 10.63216641, 10.54297032, 10.45377424, 10.36457816, 10.27538207, 10.18618599, 10.09698991, 10.00779382, 9.91859774, 9.82940165, 9.74020557, 9.65100949, 9.5618134, 9.47261732, 9.38342124, 9.29422515, 9.20502907, 9.11583299, 9.0266369, 8.93744082, 8.84824473, 8.75904865, 8.66985257, 8.58065648, 8.4914604, 8.40226432, 8.31306823, 8.22387215, 8.13467607, 8.04547998, 7.9562839, 7.86708782, 7.77789173, 7.68869565, 7.59949956, 7.51030348, 7.4211074, 7.33191131, 7.24271523, 7.15351915, 7.06432306, 6.97512698, 6.8859309, 6.79673481, 6.70753873, 6.61834265, 6.52914656, 6.43995048, 6.35075439, 6.26155831, 6.17236223, 6.08316614, 5.99397006, 5.90477398, 5.81557789, 5.72638181, 5.63718573, 5.54798964, 5.45879356, 5.36959747, 5.28040139, 5.19120531, 5.10200922, 5.01281314, 4.92361706, 4.83442097, 4.74522489, 4.65602881, 4.56683272, 4.47763664, 4.38844056, 4.29924447, 4.21004839, 4.1208523, 4.03165622, 3.94246014, 3.85326405, 3.76406797, 3.67487189, 3.5856758, 3.49647972, 3.40728364, 3.31808755, 3.22889147, 3.13969539, 3.0504993, 2.96130322, 2.87210713, 2.78291105, 2.69371497, 2.60451888, 2.5153228, 2.42612672, 2.33693063, 2.24773455, 2.15853847, 2.06934238, 1.9801463, 1.89095021, 1.80175413, 1.71255805, 1.62336196, 1.53416588, 1.4449698, 1.35577371];



			x_axis_luke = [35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 34, 34, 34, 34, 33, 33, 33, 32, 28, 27, 25, 24, 24, 24, 25, 31, 32, 33, 32, 32, 32, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 30, 30, 30, 30, 30, 30, 30, 29, 28, 19, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 24, 25, 25, 26, 27, 27, 28, 29, 30, 30, 30, 30, 30, 30, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 16, 15, 15, 15, 15, 15, 15, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 16, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 21, 21, 21, 22, 22, 23, 24, 25, 26, 27, 27, 28, 28, 28, 28, 28, 29, 29, 29, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 29, 29, 28, 28, 28, 28, 29, 29, 29, 29, 29, 28, 28, 28, 28, 28, 29, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 26, 26, 26, 26, 26, 26, 25, 25, 25, 25, 24, 24, 24, 23, 23, 22, 21, 20, 20, 28, 28, 28, 28, 28, 28, 28, 28, 28, 27, 27, 27, 27, 26, 26, 26, 25, 25, 24, 22, 24, 25, 26, 25, 25, 25, 23, 21, 20, 19, 17, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 19, 19, 19, 22, 23, 25, 28, 33, 38, 43, 23, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12];

			y_axis_luke = [17, 18, 18, 18, 18, 18, 18, 18, 18, 17, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 28, 30, 33, 36, 36, 34, 32, 23, 22, 25, 24, 24, 24, 25, 25, 25, 25, 25, 26, 25, 25, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 28, 28, 28, 28, 32, 60, 58, 60, 58, 57, 57, 57, 57, 57, 57, 57, 57, 57, 35, 34, 33, 32, 30, 30, 29, 27, 27, 26, 26, 26, 26, 26, 54, 54, 54, 54, 54, 54, 53, 53, 53, 53, 54, 54, 53, 53, 57, 58, 57, 57, 58, 58, 57, 55, 54, 55, 55, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 57, 56, 57, 59, 56, 56, 56, 56, 55, 55, 55, 54, 54, 53, 53, 53, 52, 51, 51, 50, 49, 48, 46, 45, 44, 42, 40, 38, 37, 35, 33, 31, 31, 31, 31, 31, 30, 30, 30, 30, 30, 30, 30, 30, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 30, 31, 30, 30, 30, 30, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 28, 28, 28, 28, 28, 28, 28, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 30, 30, 30, 30, 31, 31, 31, 32, 32, 32, 33, 33, 34, 34, 35, 36, 38, 39, 40, 42, 43, 43, 28, 28, 28, 28, 28, 28, 29, 29, 29, 30, 31, 32, 32, 33, 34, 35, 37, 37, 38, 42, 39, 39, 35, 36, 36, 38, 42, 48, 51, 54, 58, 60, 60, 59, 59, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 56, 57, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 55, 55, 55, 55, 55, 55, 55, 55, 54, 54, 54, 54, 54, 54, 53, 53, 53, 53, 53, 53, 53, 53, 53, 52, 51, 51, 50, 50, 49, 49, 49, 48, 47, 46, 46, 45, 45, 45, 44, 45, 46, 48, 48, 48, 39, 37, 32, 25, 19, 15, 16, 64, 54, 53, 53, 53, 53, 53, 53, 53, 53, 53, 54, 53, 53, 54, 54, 54, 54, 54, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 56, 56, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 56, 56, 56, 56, 56, 56, 56, 56, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 56, 56, 56, 57, 57, 56, 57, 56, 56, 56, 56, 56, 56, 57, 57, 57, 57, 57, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 58, 58, 58, 58, 58, 58, 58, 58, 57, 57, 57, 57, 57, 57, 57, 58, 58, 57, 58, 58, 58, 58, 58, 58, 58, 58, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 58, 58, 58, 58, 58, 58, 58, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 59, 59, 59, 59, 59, 60, 60, 60, 61, 61, 61, 59, 59, 59, 60, 60, 60, 60, 59, 58, 58, 59, 59, 58, 58, 58, 58, 58, 58, 58, 58, 58]





data = [];

for (index in x_axis) {
	data.push({
        x: x_axis[index],
        y: y_axis[index]
    })
}

prediction = [];
for (index in x_axis_prediction) {
	prediction.push({
        x: x_axis_prediction[index],
        y: y_axis_prediction[index]
    })
}

			// var ctx = document.getElementById('chart').getContext('2d');

			// 				var scatterChart = new Chart(ctx, {
			// 			    type: 'scatter',
			// 			    data: {
			// 			        datasets: [{
			// 			            label: 'Scatter Dataset',
			// 			            data: data
			// 			        }]
			// 			    },
			// 			    options: {
			// 			        scales: {
			// 			            xAxes: [{
			// 			                type: 'linear',
			// 			                position: 'bottom'
			// 			            }]
			// 			        }
			// 			    }
			// 			});





			//Be sure to include this https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.min.js

var chartColors = {
    blue : "rgb(54, 162, 235)",
    green : "rgb(45, 230, 92)",
    grey : "rgb(201, 203, 207)",
    orange : "rgb(255, 159, 64)",
    purple : "rgb(153, 102, 255)",
    red : "rgb(255, 99, 132)",
    yellow : "rgb(255, 205, 86)"
  }

function getNormalizedRandom () {
  return ((Math.random() + Math.random() + Math.random() + Math.random() + Math.random() + Math.random()) - 3) / 3;
}
//This is to return multidimensional random point within the range specified, and have the dependent
//variable vary its value based on the normal distribution
function getRandomizedData(f=(x)=>x,length,dimensions=2,range=[[-1,1]],varianceScalar=0) {
  var dataset = []
  for(i=0;i<length;i++) {
    var data = []
    var value = 0
    for(j=0;j<dimensions-1;j++) {
      var value = Math.random() * (range[j][1] - range[j][0]) + range[j][0]
      data.push(value)
    }
    value = f(...data)
    value += (getNormalizedRandom() * varianceScalar)
    data.push(value)
    dataset.push(data)
  }
  return dataset
}
function populate2DScatter(name,sampleData,xAxisLabel,yAxisLabel) {
  populate2DRegression(name,sampleData,null,xAxisLabel,yAxisLabel)
}

function populate2DRegression(
  name,
  sampleData,
  predict,
  xAxisLabel,
  yAxisLabel,
) {
  var usedColors = Object.keys(chartColors)
  var getNextColor = (color) => {
    if(color) {
      var index = usedColors.indexOf(color)
      if (index>-1) {
        return chartColors[usedColors.splice(index,1)[0]]
      } else {
        return color
      }
    } else {
      return chartColors[usedColors.shift()]
    }
    chartColors[usedColors.shift()]
  }
  var ctx = document.getElementById(name).getContext('2d');
  var color = Chart.helpers.color;

  var chartData = {datasets: sampleData.map(sample=>{
    var nextColor = getNextColor(sample.color)
    return {
          type: 'scatter',
          showLine: false,
  				label: sample.name,
  				borderColor: nextColor,
  				backgroundColor: color(nextColor).alpha(0.2).rgbString(),
  				data: sample.data
  	}
  })};
  
  if(predict) {
    //var predictData = predict.data || sampleData[0].data.map(d=>Object.assign({},d,{y:predict.func(d.x)}))
    var nextColor = getNextColor(predict.color||'red')
    //predictData = predictData.sort((a,b)=>a.x-b.x)
    chartData.datasets.push({
      type: 'line',
      showLine: true,
      cubicInterpolationMode : 'monotone',
      pointRadius : 0,
      fill: false,
      label: predict.name,
      borderColor: nextColor,
      backgroundColor: color(nextColor).alpha(0.2).rgbString(),
      data: prediction
    })
  }
  var getData=(item,data,attr) => {
    try { 
      return data.datasets[item[0].datasetIndex].data[item[0].index][attr]
    } catch (e) {
      return null
    }
  }
  var chartOptions = {
    tooltips: {
      callbacks: {
        title : (item, data) => getData(item,data,'title'),
        afterTitle : (item, data) => getData(item,data,'afterTitle'),
        label : (item, data) => {
          var label = getData(item,data,'label') || 
            item.xLabel.toFixed(2) + ", "+  item.yLabel.toFixed(2)
          return label
        }
      },
      //This ensures the regression line will not show tooltips
      filter: (item) =>item.datasetIndex !== sampleData.length
    },
    scales: {
      xAxes: [{
        scaleLabel : {
          display : xAxisLabel ? true : false,
          labelString : xAxisLabel
        },
        display: true
      }],
      yAxes: [{
        scaleLabel : {
          display : yAxisLabel ? true : false,
          labelString : yAxisLabel
        },
        display: true
      }],
    }
  }
  var myChart = new Chart.Scatter(ctx, {
      data: chartData,
      options: chartOptions
  });

}

//getRandomizedData((x)=>{return 2*x + 1;},100,2,[[0,10],[0,20]],[5,5])




window.onload = () => {
  var predictFunc1 = (x) => {return Math.pow(x,0) + 0;}
  
  var sampleData1 = data;
  // var predictData1 = sampleData1.map(d=>Object.assign({},d,{y:predictFunc1(d.x)}))
  var predictData1 = prediction;
  
  populate2DRegression("chart",
    [{name:'Sample Data',data:sampleData1}],
    {name:'Prediction',func:predictFunc1},
    'X axis - temperature','Y axis - humidity')
}





			// const TOTAL_SIZE = 10;

			// let clients = [];
			// function getTotalHosts() {
			// 	fetch('//iot.porky.dev/ass3/app/api/get/hosts')
			// 	.then(response => response.json())
			// 	.then(function(data) {
			// 		clients = data;
			// 	})
			// }
			

			// function getAll() {
			// 	return fetch('https://iot.porky.dev/ass3/app/api/get')
			// 	.then(response => response.json())
			// }

			// function getTemperature() {
			// 	return fetch('https://iot.porky.dev/ass3/app/api/get/temperature/25')
			// 	.then(response => response.json())
			// }

			// function getHumidity() {
			// 	return fetch('https://iot.porky.dev/ass3/app/api/get/humidity/25')
			// 	.then(response => response.json())
			// }

			// getAll().then(function(data) {
			// 	console.log(data);
			// }).catch(function(error) {
			// 	console.log("getAll request failed.");
			// });

			// let labels = [];
			// for (i = 0; i < TOTAL_SIZE; i++) { labels[i] = i; }
			// var ctx = document.getElementById('chart').getContext('2d');
			// var chart = new Chart(ctx, {
			// 	type: 'line',
			// 	data: {
			// 		labels: labels,
			// 	},
			// 	options: {}
			// });
			// updateChart();
			
			// dataset = [{}];
			// function updateChart() {
			// 	getAll().then(function(data) {
			// 		dataset = [{}];
			// 		sum = 0;
			// 		mean_data = [];

			// 		mean_data = calculateMean(data.temperature);

			// 		dataset[0] = {
			// 			label: "Mean temperature across all clients",//data.temperature[index].host,
			// 			labels: labels,
			// 			borderColor: "orange",
			// 			backgroundColor: 'transparent',
			// 			data: mean_data
			// 		}

			// 		chart.config.data.datasets = dataset;
			// 		chart.update();
			// 	}).catch(function(error) {
			// 		console.log("getAll chart request failed.");
			// 	});
			// };
			// function rechartTemperature() {
			// 	getAll().then(function(data) {
			// 		dataset = [{}];
			// 		sum = 0;
			// 		mean_data = [];

			// 		mean_data = calculateMean(data.temperature);

			// 		dataset[0] = {
			// 			label: "Mean temperature across all clients",//data.temperature[index].host,
			// 			labels: labels,
			// 			borderColor: "orange",
			// 			backgroundColor: 'transparent',
			// 			data: mean_data
			// 		}

			// 		chart.config.data.datasets = dataset;
			// 		chart.update();
			// 	}).catch(function(error) {
			// 		console.log("getAll chart request failed.");
			// 	});
			// };
			// function rechartHumidity() {
			// 	getAll().then(function(data) {
			// 		dataset = [{}];
			// 		sum = 0;
			// 		mean_data = [];

			// 		mean_data = calculateMean(data.humidity);

			// 		dataset[0] = {
			// 			label: "Mean humidity across all clients",//data.temperature[index].host,
			// 			labels: labels,
			// 			borderColor: "orange",
			// 			backgroundColor: 'transparent',
			// 			data: mean_data
			// 		}

			// 		chart.config.data.datasets = dataset;
			// 		chart.update();
			// 	}).catch(function(error) {
			// 		console.log("getAll chart request failed.");
			// 	});
			// };


			// function calculateMean(data) {
			// 	mean_data = [];
			// 	spliced_array = [];
			// 	for (index in data) {
			// 		spliced_array[index] = data[0].data.splice(0, TOTAL_SIZE).reverse()
			// 	}
				
			// 	for (var i = 0; i < spliced_array[0].length; i++) {
			// 		sum = 0;
			// 		for (var k = 0; k < spliced_array.length; k++) {
			// 			sum += parseInt(spliced_array[k][i]);
			// 			console.log("SUM: " + sum);
			// 		}	
			// 		mean_data.push(sum / spliced_array.length);
			// 	}
			// 	return mean_data;
			// }
 


		</script>
		<?php endif; ?>
	</body>
</html>